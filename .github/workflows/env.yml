name: ENV Variables
on: push
env:
  WF_ENV: ${{ secrets.WF_ENV }}

jobs:
  log-env:
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Available only to all steps in log-env
    steps:
      - name: Log ENV Variables
        env:
          STEP_ENV: Available to only this step
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
      
      - name: Long ENV Variables 2
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"

  log-default-env:
    runs-on: ubuntu-latest
    steps:
      - name: Default Environment Variables
        run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTION: ${GITHUB_ACTION}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "WF_ENV: ${WF_ENV}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"

  create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Creating issue using rest API
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          https://api.github.com/repos/${{GITHUB_REPOSITORY}}/issues \
          -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'